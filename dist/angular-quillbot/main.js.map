{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/pages/discover/discover.component.html","./src/app/pages/discover/discover.component.ts","./src/app/pages/not-found/not-found.component.ts","./src/app/pages/not-found/not-found.component.html","./src/app/services/discover-module.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, ViewChild } from '@angular/core';\r\nimport { BreakpointObserver } from '@angular/cdk/layout';\r\nimport { MatSidenav } from '@angular/material/sidenav';\r\nimport { delay, filter } from 'rxjs/operators';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  @ViewChild(MatSidenav)\r\n  sidenav!: MatSidenav;\r\n\r\n  constructor(private observer: BreakpointObserver, private router: Router) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.observer\r\n      .observe(['(max-width: 800px)'])\r\n      .pipe(delay(1), untilDestroyed(this))\r\n      .subscribe((res) => {\r\n        if (res.matches) {\r\n          this.sidenav.mode = 'over';\r\n          this.sidenav.close();\r\n        } else {\r\n          this.sidenav.mode = 'side';\r\n          this.sidenav.open();\r\n        }\r\n      });\r\n\r\n    this.router.events\r\n      .pipe(\r\n        untilDestroyed(this),\r\n        filter((e) => e instanceof NavigationEnd)\r\n      )\r\n      .subscribe(() => {\r\n        if (this.sidenav.mode === 'over') {\r\n          this.sidenav.close();\r\n        }\r\n      });\r\n  }\r\n}\r\n","<mat-toolbar class=\"mat-elevation-z8\">\r\n  <button\r\n    mat-icon-button\r\n    *ngIf=\"sidenav.mode === 'over'\"\r\n    (click)=\"sidenav.toggle()\"\r\n  >\r\n    <mat-icon *ngIf=\"!sidenav.opened\"> menu </mat-icon>\r\n    <mat-icon *ngIf=\"sidenav.opened\"> close </mat-icon>\r\n  </button>\r\n  Quillbot Challenge\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container>\r\n  <mat-sidenav #sidenav=\"matSidenav\" class=\"mat-elevation-z8\">\r\n    <img\r\n      class=\"avatar mat-elevation-z8\"\r\n      src=\"https://source.unsplash.com/c_GmwfHBDzk/200x200\"\r\n    />\r\n\r\n    <h4 class=\"name\">John Smith</h4>\r\n    <p class=\"designation\">Software Engineer</p>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-button class=\"menu-button\" routerLink=\"/discover\" >\r\n      <mat-icon class=\"active\">find_replace</mat-icon>\r\n      <span class=\"active\">Discover</span>\r\n    </button>\r\n    <button mat-button class=\"menu-button\" >\r\n      <mat-icon>list</mat-icon>\r\n      <span>Playlist</span>\r\n    </button>\r\n    <button mat-button class=\"menu-button\" >\r\n      <mat-icon>movie_creation</mat-icon>\r\n      <span>Movie</span>\r\n    </button>\r\n    <button mat-button class=\"menu-button\" >\r\n      <mat-icon>movie_filter</mat-icon>\r\n      <span>TV Shows</span>\r\n    </button>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-button class=\"menu-button\" >\r\n      <mat-icon>help</mat-icon>\r\n      <span>Watch Later</span>\r\n    </button>\r\n    <button mat-button class=\"menu-button\" >\r\n      <mat-icon>favorite_border</mat-icon>\r\n      <span>Recommended</span>\r\n    </button>\r\n\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-button class=\"menu-button\" >\r\n      <mat-icon>settings</mat-icon>\r\n      <span>Settings</span>\r\n    </button>\r\n    <button mat-button class=\"menu-button\" >\r\n      <mat-icon>power_settings_new</mat-icon>\r\n      <span>Logout</span>\r\n    </button>\r\n  </mat-sidenav>\r\n  <mat-sidenav-content>\r\n    <div class=\"content mat-elevation-z8\">\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </mat-sidenav-content>\r\n</mat-sidenav-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { DiscoverComponent } from './pages/discover/discover.component';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, NotFoundComponent, DiscoverComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatToolbarModule,\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDividerModule,\r\n    MatCardModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","<div class=\"row\">\n  <div class=\"col-md\">\n    <!-- <div class=\"row\">\n        <div class=\"col-md\">\n          <form class=\"search-bar\">\n            <input type=\"search\" name=\"search\" pattern=\".*\\S.*\" required>\n            <button class=\"search-btn\" type=\"submit\">\n              <span>Search</span>\n            </button>\n          </form>\n        </div>\n      </div> -->\n    <div class=\"row\">\n      <div class=\"col-md\">\n        <form action=\"\">\n\n        </form>\n      </div>\n    </div>\n    <div class=\"paddings\" *ngIf=\"showMovieDetails\">\n      <div class=\"box\">\n        <div class=\"col-md-4\">\n          <div class=\"img\">\n            <img src=\"{{ img1 }}\" alt=\"\" class=\"show-img\" />\n          </div>\n        </div>\n        <div class=\"col-md details\">\n          <h5 class=\"title-head\">Avatar</h5>\n          <div class=\"row mt-4\">\n            <div class=\"col-md-2\">\n              <p class=\"info\">Year:</p>\n            </div>\n            <div class=\"col-md\">\n              <span class=\"info\">2021</span>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <p class=\"info\">Running Time:</p>\n            </div>\n            <div class=\"col-md\">\n              <span class=\"info\">115 Min</span>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <p class=\"info\">Directed By:</p>\n            </div>\n            <div class=\"col-md\">\n              <span class=\"info\">Shawn Levy</span>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-2\">\n              <p class=\"info\">Language:</p>\n            </div>\n            <div class=\"col-md\">\n              <span class=\"info\">English</span>\n            </div>\n          </div>\n          <div class=\"row mt-3\">\n            <p class=\"info-para\">\n              Guy is a non-player character (NPC) in Free City, a massively\n              multiplayer online role-playing video game (MMORPG) developed by\n              Soonami Studio.\n            </p>\n          </div>\n          <div class=\"row mt-4\">\n            <div class=\"heading-buttons d-flex\">\n              <button type=\"button\" class=\"btn btn-Play\">Play Movie</button>\n              <button type=\"button\" class=\"btn btn-Watch mx-2\">\n                Watch Trailer\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div\n        class=\"col-md-2 mx-5 mb-4 mt-4 cards\"\n        *ngFor=\"let movie of movies.slice(0, 4); let i = index\"\n      >\n        <mat-card class=\"example-card\" (click)=\"showDetails(i)\">\n          <img\n            mat-card-image\n            src=\"{{ movie.Poster }}\"\n            alt=\"Photo of a Shiba Inu\"\n            class=\"mat-img\"\n          />\n          <mat-card-content>\n            <p class=\"title\">{{ movie.Title }}</p>\n          </mat-card-content>\n          <mat-card-actions class=\"mb-3\">\n            <button mat-button class=\"btn_mat\">\n              <img\n                src=\"../../../assets/images/Union.svg\"\n                alt=\"\"\n                class=\"icon-svg\"\n              />\n            </button>\n            <button mat-button class=\"btn_mat\">\n              <img\n                src=\"../../../assets/images/Vector.svg\"\n                alt=\"\"\n                class=\"icon-svg\"\n              />\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </div>\n      <div class=\"row paddings-card2\" *ngIf=\"showMovieDetails2\">\n        <div class=\"box\">\n          <div class=\"col-md-4\">\n            <div class=\"img\">\n              <img src=\"{{ img2 }}\" alt=\"\" class=\"show-img\" />\n            </div>\n          </div>\n          <div class=\"col-md details\">\n            <h5 class=\"title-head\">Game of Thrones</h5>\n            <div class=\"row mt-4\">\n              <div class=\"col-md-2\">\n                <p class=\"info\">Year:</p>\n              </div>\n              <div class=\"col-md\">\n                <span class=\"info\">2011</span>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-2\">\n                <p class=\"info\">Running Time:</p>\n              </div>\n              <div class=\"col-md\">\n                <span class=\"info\">56 Min</span>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-2\">\n                <p class=\"info\">Writer:</p>\n              </div>\n              <div class=\"col-md\">\n                <span class=\"info\">David Benioff</span>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-2\">\n                <p class=\"info\">Language:</p>\n              </div>\n              <div class=\"col-md\">\n                <span class=\"info\">English</span>\n              </div>\n            </div>\n            <div class=\"row mt-3\">\n              <p class=\"info-para\">\n                While a civil war brews between several noble families in\n                Westeros,the children of the former rulers of the land attempt\n                to rise up to power.Meanwhile a forgotten race, bent on\n                destruction, plans to return after thousands of years in the\n                North.\n              </p>\n            </div>\n            <div class=\"row mt-4\">\n              <div class=\"heading-buttons d-flex\">\n                <button type=\"button\" class=\"btn btn-Play\">Play Movie</button>\n                <button type=\"button\" class=\"btn btn-Watch mx-2\">\n                  Watch Trailer\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"col-md-2 mx-5 mb-4 mt-4 cards\"\n        *ngFor=\"let movie of movies.slice(4, 50); let i = index\"\n      >\n        <mat-card class=\"example-card\" (click)=\"showDetailsAgain(i)\">\n          <img\n            mat-card-image\n            src=\"{{ movie.Poster }}\"\n            alt=\"Photo of a Shiba Inu\"\n            class=\"mat-img\"\n          />\n          <mat-card-content>\n            <p class=\"title\">{{ movie.Title }}</p>\n          </mat-card-content>\n          <mat-card-actions class=\"mb-3\">\n            <button mat-button class=\"btn_mat\">\n              <img\n                src=\"../../../assets/images/Union.svg\"\n                alt=\"\"\n                class=\"icon-svg\"\n              />\n            </button>\n            <button mat-button class=\"btn_mat\">\n              <img\n                src=\"../../../assets/images/Vector.svg\"\n                alt=\"\"\n                class=\"icon-svg\"\n              />\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { DiscoverModuleService } from 'src/app/services/discover-module.service';\n\n@Component({\n  selector: 'app-discover',\n  templateUrl: './discover.component.html',\n  styleUrls: ['./discover.component.scss']\n})\nexport class DiscoverComponent implements OnInit {\n\n  movies: any = [];\n  img1: any;\n  img2: any;\n  showMovieDetails: boolean = false;\n  showMovieDetails2: boolean = false;\n  constructor(private discoverService: DiscoverModuleService) {}\n\n  ngOnInit(): void {\n    this.getMovieList();\n  }\n\n  getMovieList() {\n    this.discoverService.getMovieList().subscribe((data: any) => {\n      this.movies = data;\n      this.img1 = data[0].Poster;\n      this.img2 = data[6].Poster;\n      console.log(data);\n    });\n  }\n  showDetails(i: any) {\n    window.scroll(0, 0);\n    this.showMovieDetails = true;\n    this.showMovieDetails2 = false;\n    // if(i <= 4){\n    // }else if(i >= 5){\n    //   window.scroll(0,0)\n    //   this.showMovieDetails2 = true;\n    //   this.showMovieDetails=false;\n    // }\n  }\n\n  showDetailsAgain(i: any) {\n\n    this.showMovieDetails2 = true;\n    this.showMovieDetails = false;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.scss']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>Sorry!</h2>\r\n<p>Page was not found. Please select a valid page</p>\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DiscoverModuleService {\n  httpOptions: any;\n  constructor(private http: HttpClient) {\n\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n   }\n   getMovieList() {\n    return this.http.get('../../assets/movielist.json');\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { DiscoverComponent } from './pages/discover/discover.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    pathMatch: 'full',\r\n    redirectTo: 'discover',\r\n  },\r\n  {\r\n    path: 'discover',\r\n    component: DiscoverComponent,\r\n  },\r\n  {\r\n    path: '**',\r\n    component: NotFoundComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}